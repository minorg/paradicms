version: 2
jobs:
  gui:
    working_directory: ~/project
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          key: gui-dependency-cache-v1-{{ checksum "gui/package.json" }}-{{ checksum "gui/packages/generic/package.json" }}-{{ checksum "gui/packages/lib/package.json" }}
      - run:
          command: |
            cd gui
            npm install
            npm run lerna:bootstrap
      - save_cache:
          key: gui-dependency-cache-v1-{{ checksum "gui/package.json" }}-{{ checksum "gui/packages/generic/package.json" }}-{{ checksum "gui/packages/lib/package.json" }}
          paths:
            - ./gui/node_modules
            - ./gui/packages/generic/node_modules
            - ./gui/packages/lib/node_modules
      - run:
          command: |
            cd gui/packages/lib
            npm run build
            cd ../generic
            npm run build
  service:
    working_directory: ~/project
    docker:
      - image: circleci/openjdk:11
    steps:
      - checkout
      - restore_cache:
          key: sbt-cache-v1
      - run:
          name: Create test-results directory
          command: mkdir -p test-results/scala
      - run:
          name: Test
          command: |
            sbt clean update package test
            cp service/generic/target/test-reports/*.xml ~/project/test-results/scala
            cp service/lib/target/test-reports/*.xml ~/project/test-results/scala
      - save_cache:
          key: sbt-cache-v1
          paths:
            - "~/.ivy2/cache"
            - "~/.sbt"
            - "~/.m2"
      - store_test_results:
          path: test-results
workflows:
  version: 2
  build:
    jobs:
      - gui
      - service
