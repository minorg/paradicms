version: 2.1
jobs:
  py:
    docker:
      - image: circleci/python:3.8-node
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    steps:
      - checkout
      - run:
          name: "Change system directory permissions"
          command: sudo chown -R circleci:circleci /usr/local/bin /usr/local/lib/python3.8/site-packages
      - restore_cache:
          key: py-dependencies-v1-{{ checksum "etl/requirements.txt" }}
      - run:
          name: "Install requirements"
          command: pip install -r etl/requirements.txt
      - save_cache:
          key: py-dependencies-v1-{{ checksum "etl/requirements.txt" }}
          paths:
            - "~/.cache/pip"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.8/site-packages"
      - run:
          name: "Run unit tests"
          command: |
            cd etl
            mkdir test-results
            pytest --junitxml=test-results/junit.xml
      - store_test_results:
          path: etl/test-results
  ts:
    docker:
      - image: circleci/python:3.8-node
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    steps:
      - checkout
      - restore_cache:
          key: ts-dependencies-v4-{{ checksum "package.json" }}-{{ checksum "gui/bootstrap-collection/package.json" }}-{{ checksum "gui/material-ui-union/package.json" }}-{{ checksum "lib/ts/base/package.json" }}-{{ checksum "lib/ts/bootstrap/package.json" }}-{{ checksum "lib/ts/lunr/package.json" }}-{{ checksum "lib/ts/material-ui/package.json" }}-{{ checksum "lib/ts/material-ui-next/package.json" }}-{{ checksum "lib/ts/models/package.json" }}-{{ checksum "lib/ts/next/package.json" }}-{{ checksum "lib/ts/rdf/package.json" }}
      - run:
          name: "Install ts requirements"
          command: |
            if [ ! -d ./node_modules ]; then
              npm install
            fi
            npm run lerna:bootstrap
      - run:
          name: Build
          command: |
            # lib build order matters
            cd lib/ts/base
            export PATH=$PATH:$PWD/node_modules/.bin
            npm run build
            cd ../models
            npm run build
            cd ../rdf
            npm run build
            cd ../lunr
            npm run build
            cd ../material-ui
            npm run build
            cd ../next
            npm run build
            cd ../material-ui-next
            npm run build
            export DATA_TTL_FILE_PATH=~/project/etl/data/test_data/loaded/data.ttl
            mkdir ~/dist
            cd ~/project/gui/bootstrap-collection
            npm run build
            npm run export
            mv out ~/dist/bootstrap-collection-gui
            cd ../material-ui-union
            npm run build
            npm run export
            mv out ~/dist/material-ui-union-gui
      - save_cache:
          key: ts-dependencies-v4-{{ checksum "package.json" }}-{{ checksum "gui/bootstrap-collection/package.json" }}-{{ checksum "gui/material-ui-union/package.json" }}-{{ checksum "lib/ts/base/package.json" }}-{{ checksum "lib/ts/bootstrap/package.json" }}-{{ checksum "lib/ts/lunr/package.json" }}-{{ checksum "lib/ts/material-ui/package.json" }}-{{ checksum "lib/ts/material-ui-next/package.json" }}-{{ checksum "lib/ts/models/package.json" }}-{{ checksum "lib/ts/next/package.json" }}-{{ checksum "lib/ts/rdf/package.json" }}
          paths:
            - ~/.cache
            - ~/.npm
            - ./node_modules
            - ./gui/bootstrap-collection/node_modules
            - ./gui/material-ui-union/node_modules
            - ./lib/ts/base/node_modules
            - ./lib/ts/bootstrap/node_modules
            - ./lib/ts/lunr/node_modules
            - ./lib/ts/material-ui/node_modules
            - ./lib/ts/material-ui-next/node_modules
            - ./lib/ts/models/node_modules
            - ./lib/ts/next/node_modules
            - ./lib/ts/rdf/node_modules
      - persist_to_workspace:
          root: ~/
          paths:
            - dist/material-ui-union-gui
      - run:
          name: "Change Python system directory permissions"
          command: sudo chown -R circleci:circleci /usr/local/bin /usr/local/lib/python3.8/site-packages
      - restore_cache:
          key: py-dependencies-v1-{{ checksum "etl/requirements.txt" }}
      - run:
          name: "Install Python requirements"
          command: pip install -r etl/requirements.txt
      - save_cache:
          key: py-dependencies-v1-{{ checksum "etl/requirements.txt" }}
          paths:
            - "~/.cache/pip"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.8/site-packages"
      - run:
          name: "Run GUI loader tests"
          command: |
            mkdir -p test-results
            cd etl
            pytest --junitxml=../test-results/etl.xml test/paradicms_etl_test/loaders/gui/gui_builder_test.py test/paradicms_etl_test/loaders/gui/gui_loader_test.py
      - store_test_results:
          path: test-results
# Disabled Cypress tests because the CI environment can't find symlinked lib/ts packages.
# Related to https://github.com/cypress-io/code-coverage/issues/299
# Error: Can't walk dependency graph: Cannot find module '@*********/rdf' from '/root/project/integration/material-ui-union/cypress/support'
#        required by /root/project/integration/material-ui-union/cypress/support/TestData.ts
# The tests work locally.
#orbs:
#  cypress: cypress-io/cypress@1
workflows:
  version: 2
  build:
    jobs:
#      - cypress/install:
#          cache-key: 'cache-{{ arch }}-{{ .Branch }}-{{ checksum "~/project/package.json" }}-{{ checksum "~/project/gui/material-ui-union/package.json" }}-{{ checksum "~/project/integration/material-ui-union/package.json" }}-{{ checksum "~/project/lib/ts/base/package.json" }}-{{ checksum "~/project/lib/ts/models/package.json" }}-{{ checksum "~/project/lib/ts/material-ui/package.json" }}-{{ checksum "~/project/lib/ts/rdf/package.json" }}'
#          install-command: cd ~/project && npm install && npm run lerna:bootstrap
#          requires:
#            - ts
#          working_directory: integration/material-ui-union
#      - cypress/run:
#          attach-workspace: true
#          post-steps:
#            - store_test_results:
#                path: integration/material-ui-union/results
#          requires:
#            - cypress/install
#          start: |
#            cp ~/project/.circleci/cypress.json .
#            ~/project/node_modules/.bin/serve -n ~/dist/material-ui-union-gui
#          store_artifacts: true
#          wait-on: 'http-get://localhost:5000/index.html'
#          working_directory: integration/material-ui-union
      - py
      - ts
