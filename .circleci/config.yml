version: 2.1
jobs:
  py:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          name: "Change system directory permissions"
          command: sudo chown -R circleci:circleci /usr/local/bin /usr/local/lib/python3.8/site-packages
      - restore_cache:
          key: py-dependencies-{{ .Branch }}-{{ checksum "etl/requirements.txt" }}
      - run:
          name: "Install requirements"
          command: pip install -r etl/requirements.txt
      - save_cache:
          key: py-dependencies-{{ .Branch }}-{{ checksum "etl/requirements.txt" }}
          paths:
            - "~/.cache/pip"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.8/site-packages"
      - run:
          name: "Run test data pipeline"
          command: |
            cd etl
            export PYTHONPATH=$PWD
            python3 paradicms_etl/pipelines/test_data/test_data_pipeline.py
  ts:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          key: ts-cache-v4-{{ checksum "package.json" }}-{{ checksum "gui/generic/package.json" }}-{{ checksum "lib/ts/base/package.json" }}-{{ checksum "lib/ts/material-ui/package.json" }}
      - run:
          name: Clean out cache
          command: |
            rm -fr ~/.cache
            rm -fr ~/.npm
            rm -fr node_modules
            rm -fr gui/generic/node_modules
            rm -fr lib/ts/base/node_modules
            rm -fr lib/ts/material-ui/node_modules
      - run:
          command: |
            if [ ! -d ./node_modules ]; then
              npm install
            fi
            npm run lerna:bootstrap
      - run:
          name: Build
          command: |
            cd lib/ts/base
            export PATH=$PATH:$PWD/node_modules/.bin
            npm run build
            cd ../material-ui
            npm run build
            cd ../../../gui/generic
            export DATA_DIRECTORY_PATH=$PWD/src/data/test
            npm run build
            mkdir ~/dist
            cp -p -R public ~/dist/generic-gui
      - save_cache:
          key: ts-cache-v4-{{ checksum "package.json" }}-{{ checksum "gui/generic/package.json" }}-{{ checksum "lib/ts/base/package.json" }}-{{ checksum "lib/ts/material-ui/package.json" }}
          paths:
            - ~/.cache
            - ~/.npm
            - ./node_modules
            - ./gui/generic/node_modules
            - ./lib/ts/base/node_modules
            - ./lib/ts/material-ui/node_modules
      - persist_to_workspace:
          root: ~/
          paths:
            - dist/generic-gui
orbs:
  cypress: cypress-io/cypress@1
workflows:
  version: 2
  build:
    jobs:
      - cypress/install:
          cache-key: 'cache-{{ arch }}-{{ .Branch }}-{{ checksum "~/project/package.json" }}-{{ checksum "~/project/gui/generic/package.json" }}-{{ checksum "~/project/integration/generic/package.json" }}-{{ checksum "~/project/lib/ts/base/package.json" }}-{{ checksum "~/project/lib/ts/material-ui/package.json" }}'
          post-install:
            - run: cd ~/project && npm install && npm run lerna:bootstrap
          requires:
            - ts
          working_directory: integration/generic
      - cypress/run:
          attach-workspace: true
          post-steps:
            - store_test_results:
                path: integration/generic/results
          requires:
            - cypress/install
          start: |
            pwd
            cp ~/project/.circleci/cypress.json .
            cd ~/project/gui/generic
            rm -fr public
            cp -p -R ~/dist/generic-gui public
            npm run serve
          store_artifacts: true
          wait-on: 'http-get://localhost:9000/index.html'
          working_directory: integration/generic
      - py
      - ts
